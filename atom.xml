<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fly理的站台</title>
  
  <subtitle>growing and dying</subtitle>
  <link href="https://flyleeee.github.io/atom.xml" rel="self"/>
  
  <link href="https://flyleeee.github.io/"/>
  <updated>2021-10-04T12:22:03.194Z</updated>
  <id>https://flyleeee.github.io/</id>
  
  <author>
    <name>fly理</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python中实参的*</title>
    <link href="https://flyleeee.github.io/2021/10/04/post-6/"/>
    <id>https://flyleeee.github.io/2021/10/04/post-6/</id>
    <published>2021-10-04T12:13:21.000Z</published>
    <updated>2021-10-04T12:22:03.194Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="python中实参的"><a href="#python中实参的" class="headerlink" title="python中实参的*"></a>python中实参的*</h1><p>在调用函数时，*和**可以分别拆开元组与字典中的参数</p><h2 id="："><a href="#：" class="headerlink" title="*："></a>*：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myprint</span>(<span class="params">x,y</span>):</span></span><br><span class="line">    print(x)</span><br><span class="line">    print(y)</span><br></pre></td></tr></table></figure><p>假设你还有一个元组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">params=(<span class="number">1</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>可以通过如下方式调用myprint函数：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myprint(*params)</span><br></pre></td></tr></table></figure><p>就可以输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="：-1"><a href="#：-1" class="headerlink" title="**："></a>**：</h2><p>和上面3.1.2很像，是分配字典的。</p><p>这回params是一个字典了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">params=&#123;<span class="string">&#x27;x&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;y&#x27;</span>:<span class="number">2</span>&#125;</span><br></pre></td></tr></table></figure><p>可以通过如下方式调用myprint函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myprint(**params)</span><br></pre></td></tr></table></figure><p>就可以输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="py那些小tips" scheme="https://flyleeee.github.io/categories/py%E9%82%A3%E4%BA%9B%E5%B0%8Ftips/"/>
    
    
    <category term="python" scheme="https://flyleeee.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>可视化你的进度条：tqdm</title>
    <link href="https://flyleeee.github.io/2021/10/04/tqdm/"/>
    <id>https://flyleeee.github.io/2021/10/04/tqdm/</id>
    <published>2021-10-04T11:27:38.000Z</published>
    <updated>2021-10-04T11:32:00.681Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>tqdm是一个进度条工具，只要套在可迭代对象的外面就可以自动显示进度条</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tqdm(<span class="built_in">range</span>(<span class="number">100</span>)):</span><br><span class="line">  time.sleep(<span class="number">0.1</span>)</span><br><span class="line">  <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/2019073110364372.gif" alt="img" loading="lazy"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="py那些小tips" scheme="https://flyleeee.github.io/categories/py%E9%82%A3%E4%BA%9B%E5%B0%8Ftips/"/>
    
    
    <category term="python" scheme="https://flyleeee.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Transformer</title>
    <link href="https://flyleeee.github.io/2021/10/03/Transformer/"/>
    <id>https://flyleeee.github.io/2021/10/03/Transformer/</id>
    <published>2021-10-03T07:12:57.000Z</published>
    <updated>2021-10-03T07:20:28.289Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id="Seq2seq"><a href="#Seq2seq" class="headerlink" title="Seq2seq"></a>Seq2seq</h2><p>就是input加到Encoder里，再进Decoder得到output</p><h2 id="Encoder"><a href="#Encoder" class="headerlink" title="Encoder"></a>Encoder</h2><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002165001912.png" alt="image-20211002165001912" loading="lazy"></p><ul><li>这里的Layer norm是对一个输入example的所有dimension做normalization</li><li>总共两次res，两次norm，对每次res完的加和做norm</li></ul><h3 id="实际流程"><a href="#实际流程" class="headerlink" title="实际流程"></a>实际流程</h3><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002171600461.png" alt="image-20211002171600461" loading="lazy"></p><p>这样的Encoder也用在了BERT里</p><h3 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h3><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002165445054.png" alt="image-20211002165445054" loading="lazy"></p><p>第一篇paper：证明把Layer norm加在res后的主分支里，效果会更好。</p><p>第二盘paper：证明了为什么Layer norm在这里要比Batch norm要更好，提出了PowerNorm，好像要更好一点？</p><h2 id="Decoder—Autoregressive-AT"><a href="#Decoder—Autoregressive-AT" class="headerlink" title="Decoder—Autoregressive(AT)"></a>Decoder—Autoregressive(AT)</h2><h3 id="大致流程"><a href="#大致流程" class="headerlink" title="大致流程"></a>大致流程</h3><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002171343461.png" alt="image-20211002171343461" loading="lazy"></p><h3 id="具体流程"><a href="#具体流程" class="headerlink" title="具体流程"></a>具体流程</h3><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002171930713.png" alt="image-20211002171930713" loading="lazy"></p><h3 id="Masked-Self-attention"><a href="#Masked-Self-attention" class="headerlink" title="Masked Self-attention"></a>Masked Self-attention</h3><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002172130600.png" alt="image-20211002172130600" loading="lazy"></p><p>Masked指的是在计算<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.71ex" height="1.904ex" role="img" focusable="false" viewBox="0 -830.4 756 841.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(462,363) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>时只考虑<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex" xmlns="http://www.w3.org/2000/svg" width="2.185ex" height="1.909ex" role="img" focusable="false" viewBox="0 -833.9 965.6 843.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container>到<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex" xmlns="http://www.w3.org/2000/svg" width="1.937ex" height="1.901ex" role="img" focusable="false" viewBox="0 -830.4 856 840.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(562,363) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>，因为喂给Decoder的input就是依序喂的，不用考虑后文对前文的影响。</p><h2 id="Decode—Non-autoregressive-NAT"><a href="#Decode—Non-autoregressive-NAT" class="headerlink" title="Decode—Non-autoregressive(NAT)"></a>Decode—Non-autoregressive(NAT)</h2><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002174135580.png" alt="image-20211002174135580" loading="lazy"></p><p>为什么NAT不如AT？因为Multi-modality(详见 To leatn more)</p><h2 id="Cross-attention"><a href="#Cross-attention" class="headerlink" title="Cross attention"></a>Cross attention</h2><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002175139065.png" alt="image-20211002175139065" loading="lazy"></p><p>它衔接了Encoder与Decoder</p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002175059291.png" alt="image-20211002175059291" loading="lazy"></p><p>就是把Encoder的输出再拿来，这一次只用当前input的这一个向量<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container>与Encoder的输出计算最终这一个向量<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container>对应的结果</p><h3 id="改进-1"><a href="#改进-1" class="headerlink" title="改进"></a>改进</h3><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002175738079.png" alt="image-20211002175738079" loading="lazy"></p><p>也可以不用Encoder的最后一层的output做Cross Attention</p><h2 id="Training"><a href="#Training" class="headerlink" title="Training"></a>Training</h2><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002180621824.png" alt="image-20211002180621824" loading="lazy"></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002180934353.png" alt="image-20211002180934353" style="zoom: 67%;" loading="lazy"><p>我们有时候需要机器去做“复述”</p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002181524443.png" alt="image-20211002181524443" loading="lazy"></p><p>Attention的着重点有时候会出错，可guide它</p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002181824781.png" alt="image-20211002181824781" loading="lazy"></p><p>原本的AT是贪心的，可以用柱搜索，做动态规划，但是效果对于实际场景不一，如果问题的正确性比较明确，Beam Search就比较有用，但是有的问题，甚至test的时候都需要一些随机性才能有好的效果</p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002182304165.png" alt="image-20211002182304165" loading="lazy"></p><p>小tip：optim遇到问题的时候可以用RL硬train！</p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002182444736.png" alt="image-20211002182444736" loading="lazy"></p><p>因为train的时候给Decoder的是Ground Truth，为了防止test的时候有wrong propagation，可以在train的时候加noise。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ML学习笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/ML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NLP笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/ML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NLP%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="ml" scheme="https://flyleeee.github.io/tags/ml/"/>
    
    <category term="nlp" scheme="https://flyleeee.github.io/tags/nlp/"/>
    
  </entry>
  
  <entry>
    <title>Self-attention</title>
    <link href="https://flyleeee.github.io/2021/10/02/Self-attention/"/>
    <id>https://flyleeee.github.io/2021/10/02/Self-attention/</id>
    <published>2021-10-02T08:11:56.000Z</published>
    <updated>2021-10-02T08:17:53.224Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id="处理对象：Sequence-Labeling"><a href="#处理对象：Sequence-Labeling" class="headerlink" title="处理对象：Sequence Labeling"></a>处理对象：Sequence Labeling</h2><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002145237875.png" alt="image-20211002145237875" style="zoom:67%;" loading="lazy"><p>指输入为一系列vector，而输出为每一个vector对应一个label，对于输入vector数量不定的情况，用FCNN明显是不合适的。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>self-attention对于每一个输入vector进行处理，使得输出的vector包含了整个context(sequence)的信息。</p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002150117342.png" alt="image-20211002150117342" loading="lazy"></p><p>self-attention会计算当前单元与其他输入单元的关联程度<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container></p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002150432856.png" alt="image-20211002150432856" style="zoom:67%;" loading="lazy"><p>计算<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container>的方法很多，transformer里的self-attention计算<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container>的方法叫Dot-product, 就是将两个输入各自乘以一个权重矩阵后再做dot-product，所得的结果即为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container>。这里的q指query，k指key，其作用大概就是英文所表达的意思，类似于搜索里的概念，我也没有搞很清楚。</p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002151059369.png" alt="image-20211002151059369" style="zoom:67%;" loading="lazy"><p>计算<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container></p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002151354162.png" alt="image-20211002151354162" style="zoom:67%;" loading="lazy"><p>将<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container>(attention scores)乘上用原本vector计算出的关键信息向量<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.097ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 485 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></svg></mjx-container>，得到对应的处理后的vector。</p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002152226571.png" alt="image-20211002152226571" style="zoom:67%;" loading="lazy"><p>比较关键的是，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="12.408ex" height="2.37ex" role="img" focusable="false" viewBox="0 -853.7 5484.6 1047.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mi" transform="translate(1136.2,363) scale(0.707)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mo" transform="translate(1511.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(1956.1,0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mi" transform="translate(1136.2,363) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(3510.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(3955.4,0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mi" transform="translate(1136.2,363) scale(0.707)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></svg></mjx-container>对于每个输入vector来说都是一样的，可以并行计算</p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002152550483.png" alt="image-20211002152550483" style="zoom: 67%;" loading="lazy"><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002152721661.png" alt="image-20211002152721661" style="zoom: 67%;" loading="lazy"><p>后面的计算过程也可以用矩阵简化，做到并行，不多赘述。</p><h2 id="全流程"><a href="#全流程" class="headerlink" title="全流程"></a>全流程</h2><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002152930403.png" alt="image-20211002152930403" loading="lazy"></p><p>整个过程中，只有<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="12.408ex" height="2.37ex" role="img" focusable="false" viewBox="0 -853.7 5484.6 1047.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mi" transform="translate(1136.2,363) scale(0.707)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mo" transform="translate(1511.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(1956.1,0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mi" transform="translate(1136.2,363) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(3510.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(3955.4,0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mi" transform="translate(1136.2,363) scale(0.707)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></g></svg></mjx-container>是要学习的参数。</p><h2 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h2><h3 id="改进1：Multi-head-Self-attention"><a href="#改进1：Multi-head-Self-attention" class="headerlink" title="改进1：Multi-head Self-attention"></a>改进1：Multi-head Self-attention</h3><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002153414669.png" alt="image-20211002153414669" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002153429774.png" alt="image-20211002153429774" loading="lazy"></p><p>大体上来说就是多算几组，head数需要依据具体问题自己调整，这个方法现在用的比较多</p><h3 id="改进2：Positional-Encoding"><a href="#改进2：Positional-Encoding" class="headerlink" title="改进2：Positional Encoding"></a>改进2：Positional Encoding</h3><p>self-attention没有利用相对位置的信息</p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002154211210.png" alt="image-20211002154211210" loading="lazy"></p><p>利用一些人工规则为每一个输入向量计算出一个positional vector，这一方面的方法有待研究</p><h2 id="Self-attention与CV"><a href="#Self-attention与CV" class="headerlink" title="Self-attention与CV"></a>Self-attention与CV</h2><h3 id="在CV上的应用"><a href="#在CV上的应用" class="headerlink" title="在CV上的应用"></a>在CV上的应用</h3><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002154739021.png" alt="image-20211002154739021" loading="lazy"></p><h3 id="与CNN的关系：CNN就是Self-attention的简化版"><a href="#与CNN的关系：CNN就是Self-attention的简化版" class="headerlink" title="与CNN的关系：CNN就是Self-attention的简化版"></a>与CNN的关系：CNN就是Self-attention的简化版</h3><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002154909761.png" alt="image-20211002154909761" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002154954213.png" alt="image-20211002154954213" loading="lazy"></p><p>该paper用数学方式证明，CNN就是self-attention的子集，特定参数的self-attention就是CNN</p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002155346485.png" alt="image-20211002155346485" loading="lazy"></p><p>Self-attention弹性大，也需要更多data </p><h2 id="对比RNN"><a href="#对比RNN" class="headerlink" title="对比RNN"></a>对比RNN</h2><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211002155759199.png" alt="image-20211002155759199" loading="lazy"></p><p>RNN看起来能保留位置信息，但是也有着难以考虑远距离vector的性质，而且无法做到并行处理，因此现在都用Self-attention而不用RNN了，也有一篇paper说明了self-attention加上一些东西就是RNN。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ML学习笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/ML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="CV笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/ML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/CV%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="ml" scheme="https://flyleeee.github.io/tags/ml/"/>
    
    <category term="cv" scheme="https://flyleeee.github.io/tags/cv/"/>
    
  </entry>
  
  <entry>
    <title>Spatial Transformer Layer</title>
    <link href="https://flyleeee.github.io/2021/10/01/STL/"/>
    <id>https://flyleeee.github.io/2021/10/01/STL/</id>
    <published>2021-10-01T03:47:37.000Z</published>
    <updated>2021-10-01T03:54:32.579Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id="为什么需要它"><a href="#为什么需要它" class="headerlink" title="为什么需要它"></a>为什么需要它</h2><p>CNN无法做到旋转与缩放不变性,translatian也只能做的很小(利用pooling)</p><h2 id="STL做的事情"><a href="#STL做的事情" class="headerlink" title="STL做的事情"></a>STL做的事情</h2><p>对图像做旋转与缩放，并使这一过程的参数可学习，其实就是用仿射变换(affine transformation)</p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211001104926002.png" alt="image-20211001104926002" style="zoom: 67%;" loading="lazy"><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211001105006792.png" alt="image-20211001105006792" style="zoom: 67%;" loading="lazy"><p>如果train出来的转移方程，通过四舍五入导致一个pixel的位置不变，那么它的参数gradient为0</p><h2 id="解决办法：Interpolation-插值"><a href="#解决办法：Interpolation-插值" class="headerlink" title="解决办法：Interpolation(插值)"></a>解决办法：Interpolation(插值)</h2><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211001105352136.png" alt="image-20211001105352136" style="zoom:67%;" loading="lazy"><p>不用四舍五入，而用双线性插值，基本思想是通过某一点周围四个点的灰度值来估计出该点的灰度值</p><h2 id="具体结构"><a href="#具体结构" class="headerlink" title="具体结构"></a>具体结构</h2><h3 id="3-1-Localisation-Network"><a href="#3-1-Localisation-Network" class="headerlink" title="3.1 Localisation Network"></a>3.1 Localisation Network</h3><p>The localisation network function floc() can take any form, such as a fully-connected network or a convolutional network, but should include a final regression layer to produce the transformation parameters θ.</p><h3 id="3-2-Parameterised-Sampling-Grid"><a href="#3-2-Parameterised-Sampling-Grid" class="headerlink" title="3.2 Parameterised Sampling Grid"></a>3.2 Parameterised Sampling Grid</h3><p>用上一层output出的<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.618ex" role="img" focusable="false" viewBox="0 -705 469 715"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g></svg></mjx-container>来做仿射变换</p><h3 id="3-3-Differentiable-Image-Sampling"><a href="#3-3-Differentiable-Image-Sampling" class="headerlink" title="3.3 Differentiable Image Sampling"></a>3.3 Differentiable Image Sampling</h3><p>再做双线性插值，实现可微</p><h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20211001105837553.png" alt="image-20211001105837553" style="zoom: 33%;" loading="lazy"><p>这种layer可以用来处理input与feature map，也可以在同一层加多个单元(这里将它看做一个neuron)以产生不同的Spatial Transformer Output</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ML学习笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/ML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="CV笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/ML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/CV%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="ml" scheme="https://flyleeee.github.io/tags/ml/"/>
    
    <category term="cv" scheme="https://flyleeee.github.io/tags/cv/"/>
    
  </entry>
  
  <entry>
    <title>自适应学习率算法</title>
    <link href="https://flyleeee.github.io/2021/09/24/%E8%87%AA%E9%80%82%E5%BA%94%E5%AD%A6%E4%B9%A0%E7%8E%87%E7%AE%97%E6%B3%95/"/>
    <id>https://flyleeee.github.io/2021/09/24/%E8%87%AA%E9%80%82%E5%BA%94%E5%AD%A6%E4%B9%A0%E7%8E%87%E7%AE%97%E6%B3%95/</id>
    <published>2021-09-24T01:57:31.000Z</published>
    <updated>2021-10-01T03:29:01.698Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>李宏毅视频课：<a href="https://www.bilibili.com/video/BV1Wv411h7kN?p=16">https://www.bilibili.com/video/BV1Wv411h7kN?p=16</a></p><h2 id="Exponential-Moving-Average-EMA"><a href="#Exponential-Moving-Average-EMA" class="headerlink" title="Exponential Moving Average (EMA)"></a>Exponential Moving Average (EMA)</h2><p>EMA即指数滑动平均，如下公式所示： <img src="https://www.zhihu.com/equation?tex=M=(1-%5Clambda)+M%27+++%5Clambda+M" alt="[公式]" loading="lazy"> 。在你的机器学习项目中用上EMA，可能会有意想不到的效果。实际上，EMA可以看作是Temporal Ensembling，在模型学习过程中融合更多的历史状态，从而达到更好的优化效果。</p><h2 id="SGDM"><a href="#SGDM" class="headerlink" title="SGDM"></a>SGDM</h2><p>当一个时间窗口内大部分梯度方向大体一致，说明沿着这个方向走是比较置信的，动量项在这种情况下起到加速作用；相反的如果梯度比较随机，则起到缓速作用。从当前梯度和历史梯度方向是否一致的角度出发也有类似的结论。</p><h2 id="AdaGrad"><a href="#AdaGrad" class="headerlink" title="AdaGrad"></a>AdaGrad</h2><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20210924100248724.png" alt="image-20210924100248724" style="zoom: 33%;" loading="lazy"><p>将每次的梯度叠加值除以一个之前梯度的累积，可以防止前期的梯度过大导致在最优点附近步长过大，但这是基于凸优化提出的，实际对于神经网络来说会导致梯度过早和过量的减小</p><h2 id="RMSProp"><a href="#RMSProp" class="headerlink" title="RMSProp"></a>RMSProp</h2><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20210924100646876.png" alt="image-20210924100646876" style="zoom: 67%;" loading="lazy"><p>对AdaGrad在非凸情况下做出了优化，对于非凸函数训练神经网络，学习轨迹可能穿过了很多不同的结构，但AdaGrad统计了太多之前别的局部凸函数结构的信息，这是不应该的，RMSRrop使得学习率能更注重于局部凸函数结构。</p><h2 id="Adam"><a href="#Adam" class="headerlink" title="Adam"></a>Adam</h2><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20210924102333817.png" alt="image-20210924102333817" style="zoom: 50%;" loading="lazy"><p>Adam主要对于momentum和velocity的累积做出了时间上的平均，在前期可以使这两项不会太小，而在后期使它们不会太大。</p><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><p>Adam与SGDM是近几年SOTA模型都在用的两种优化方法，Adam在test上表现最好，SGDM在validation上的表现最好</p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20210924104133070.png" alt="image-20210924104133070" style="zoom: 50%;" loading="lazy"><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20210924104220146.png" alt="image-20210924104220146" style="zoom:50%;" loading="lazy"><p>在其他的实验中，Adam一开始训练速度很快，但泛化很差，不稳定；SGDM虽然训练比较慢，但泛化要更好，而且表现稳定</p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20210924105342498.png" alt="image-20210924105342498" style="zoom:50%;" loading="lazy"><p>一个直觉的解释：<strong>可能是</strong>因为Adam找到的是比较sharp的minimum，这种minimum泛化gap会比较大，而SGDM找到的是比较flat的，泛化gap小</p><h2 id="SWATS"><a href="#SWATS" class="headerlink" title="SWATS"></a>SWATS</h2><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20210924105602690.png" alt="image-20210924105602690" loading="lazy"></p><p>还有好多针对Adam和SGDM的改进方法，但是效果都比较一般，详见视频课</p><h2 id="Adam的warm-up"><a href="#Adam的warm-up" class="headerlink" title="Adam的warm-up"></a>Adam的warm-up</h2><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20210925214000587.png" alt="image-20210925214000587" loading="lazy"></p><p>实验表明梯度分布在前10个step会很波动，这让Adam的<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.863ex" height="1.359ex" role="img" focusable="false" viewBox="0 -443 823.3 600.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></g></svg></mjx-container>学到了很烂的趋势</p><p><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/image-20210925215507245.png" alt="image-20210925215507245" loading="lazy"></p><p>RAdam用<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="4.186ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 1850.3 851.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(451,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="msub" transform="translate(1027,0)"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></g></svg></mjx-container>计算出<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.786ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 789.3 599.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(484,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></g></svg></mjx-container>来估计当前梯度的稳定情况，在<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="10.095ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 4461.8 851.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(451,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="msub" transform="translate(1027,0)"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="mo" transform="translate(2128,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(778,0)"></path></g><g data-mml-node="mn" transform="translate(3961.8,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></svg></mjx-container>时这个估计是不稳定的，所以直接用了SGDM</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ML学习笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/ML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="ml" scheme="https://flyleeee.github.io/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>在mnist上使用torchvision的架构</title>
    <link href="https://flyleeee.github.io/2021/09/21/post-5/"/>
    <id>https://flyleeee.github.io/2021/09/21/post-5/</id>
    <published>2021-09-21T07:23:19.000Z</published>
    <updated>2021-09-23T11:02:52.032Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>torchvision上的模型都是基于ImageNet的，想将其用于MNIST也很简单，只需要一点点修改(以resnet18为例)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = tv.models.resnet18(num_classes = <span class="number">10</span>)</span><br><span class="line">model.conv1 = Conv2d(<span class="number">1</span>, <span class="number">64</span>, kernel_size=(<span class="number">7</span>, <span class="number">7</span>), stride=(<span class="number">2</span>, <span class="number">2</span>), padding=(<span class="number">3</span>, <span class="number">3</span>), bias=<span class="literal">False</span>) <span class="comment">#因为mnist是单通道的，而ImageNet是3通道</span></span><br></pre></td></tr></table></figure><p>end</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="ml" scheme="https://flyleeee.github.io/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>pytorch学习笔记</title>
    <link href="https://flyleeee.github.io/2021/09/19/pytorch-notebook/"/>
    <id>https://flyleeee.github.io/2021/09/19/pytorch-notebook/</id>
    <published>2021-09-19T07:39:30.000Z</published>
    <updated>2021-09-21T07:32:28.518Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h3 id="model级"><a href="#model级" class="headerlink" title="model级"></a>model级</h3><h4 id="model-eval-与model-train-："><a href="#model-eval-与model-train-：" class="headerlink" title="model.eval()与model.train()："></a><code>model.eval()</code>与<code>model.train()</code>：</h4><p>  eval会停止batch normalization和drop out</p><h3 id="tensor级"><a href="#tensor级" class="headerlink" title="tensor级"></a>tensor级</h3><h4 id="unsqueeze与-squeeze"><a href="#unsqueeze与-squeeze" class="headerlink" title="unsqueeze与 squeeze"></a>unsqueeze与 squeeze</h4><p>  <code>tensor.unsqueeze(x)</code>会在该tensor的指定第x维前(x从0开始计)再加一维<br>  如<code>t.unsqueeze(1)</code>会将shape[2, 3]变为shape[2, 1, 3]<br>  <code>tensor.squeeze(x)</code>会在该tensor的指定第x维删除，前提是第x维是1维，如shape[2, 1, 3]只能对第1维进行squeeze变成shape[2,3]，否则都不会有任何改变</p><h4 id="view"><a href="#view" class="headerlink" title="view"></a>view</h4><p><code>tensor.view(shape)</code>会将tensor的内容填充到指定shape的tensor里, inplace = False</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = torch.rand(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">y = x.view(<span class="number">4</span>)</span><br><span class="line">x += <span class="number">1</span></span><br><span class="line">print(x)</span><br><span class="line">print(y) <span class="comment"># 也加了1</span></span><br></pre></td></tr></table></figure><h4 id="后缀为单下划线-的方法一般指inplace-True的方法，例如"><a href="#后缀为单下划线-的方法一般指inplace-True的方法，例如" class="headerlink" title="后缀为单下划线_的方法一般指inplace = True的方法，例如"></a>后缀为单下划线<code>_</code>的方法一般指<code>inplace = True</code>的方法，例如</h4><p>  clamp 和 clamp_ :<br>  <img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/20190208220807723.png" alt="example" loading="lazy"></p><h4 id="往torch-tensor-里默认塞的是torch-Size"><a href="#往torch-tensor-里默认塞的是torch-Size" class="headerlink" title="往torch.tensor()里默认塞的是torch.Size"></a>往torch.tensor()里默认塞的是torch.Size</h4><h4 id="关于计算图"><a href="#关于计算图" class="headerlink" title="关于计算图"></a>关于计算图</h4><p>这个写的很好：<a href="https://zhuanlan.zhihu.com/p/279758736">一文解释PyTorch求导相关 (backward, autograd.grad)</a></p><ul><li>non-leaf node指的是计算图的中间变量，需要用gard_fn记录他们的计算来源函数，但是不需要保留他们的grad(<code>retain_grad = False</code>)</li><li>leaf node指的是计算图边缘的叶子结点，是纯粹由用户创建的，默认需要保留他们的grad(<code>retain_grad = True</code>)，需不需要grad可以由用户来决定</li><li>如果用户创建的结点requires_grad = False，那么该变量在没有non leaf node参与计算时，计算出的变量都是leaf node，如果requires_grad = True，那么普通的数值计算出的变量都是non leaf node</li><li>non-leaf node的grad在bp后不会被保留，需要设置tensor.retain_grad()才行</li><li>clone出来的变量保留了原始变量的requires_grad属性，但仍为non-leaf node，需要手动retain_grad()才能查看其grad</li><li>detach出来的变量从计算图中分离，无法求导</li><li>torch.max()返回的第一项是value，第二项是indice(坐标)<br><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/Snipaste_2021-09-21_11-40-36.png" alt="example" loading="lazy"></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://flyleeee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="ml" scheme="https://flyleeee.github.io/tags/ml/"/>
    
    <category term="pytorch" scheme="https://flyleeee.github.io/tags/pytorch/"/>
    
  </entry>
  
  <entry>
    <title>VSC插件：在VSC里preview你的md文件</title>
    <link href="https://flyleeee.github.io/2021/09/19/Enhanced/"/>
    <id>https://flyleeee.github.io/2021/09/19/Enhanced/</id>
    <published>2021-09-19T06:41:59.000Z</published>
    <updated>2021-10-04T11:30:06.648Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="Markdown-Preview-Enhanced"><a href="#Markdown-Preview-Enhanced" class="headerlink" title="Markdown Preview Enhanced"></a>Markdown Preview Enhanced</h1><p>在扩展商店里搜索Markdown Preview Enhanced，安装，在markdown文件中按下<code>ctrl+k</code>再按下<code>v</code>即可在侧窗口打开md的preview辣！<br>按下<code>ctrl+shift+v</code>可以全屏预览。<br>  <img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/Snipaste_2021-09-19_17-29-41.png" alt="example" loading="lazy"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="VSC那些小tips" scheme="https://flyleeee.github.io/categories/VSC%E9%82%A3%E4%BA%9B%E5%B0%8Ftips/"/>
    
    
    <category term="VSC" scheme="https://flyleeee.github.io/tags/VSC/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://flyleeee.github.io/2021/03/25/post-4/"/>
    <id>https://flyleeee.github.io/2021/03/25/post-4/</id>
    <published>2021-03-25T05:43:27.000Z</published>
    <updated>2021-03-25T05:49:38.400Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="别想了，没密码看不了的" data-whm="这是啥意思，没搞懂">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">没密码就别想看力</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="398eca8845f0c4455e4b221a50be0bf81028b04992464e4b4ab563cc4d47577c">c49ff408f5a99a5cb1090d5c2da5a69708d5191d874ce186cee5b8e7eba610810a29181d598a54314fbb3fb831cc7f414950311fcc4cc8e22883a1091e19443bf1694cec034480458d3bb1e412fb271ae16f4a9acc1f38568a388c937f2c64b497830636572d4c626a7338fdb86155374aec2241204e3b044f587d0c2d12be38371394be9015a0f582de2a3d0d2d4b96f2603d53a4c345ee5c513e2893dffa892d177b2b476490be94c7f2a45b07f601a248100be724f5178adbc17acd6c4a5ecf42be4b54782421e3364e053bffd479d4b4e0f29b48d32ae378049927e4c56bd1c7a5488ba7e34ba6f860547cda7f0568035683dcd174f4d8f0da08c9e3aa1ba0a8d555248b1853b2f01b1f8ccf3ab505b2f474489168e28e780f46a8749266a78e54158e42dd6388fc800b17e0a4bc7dea2d2897617e1f8d78b4fbd9b1a840b043ebdc396cb6514939dbc213a504c5ffdd8ca15e11f30dd631e5af784a20ce4bc9aee7cd96d3432808b419f956f6c00db9b0916b625ef25845ed59e3a45be9203bd817a5e8dc92c2dfb7db27e3c117512c54be98349c1e47ceca41ede19fc84fe3bdf2f6a3af6259f33c3d0db1de37a70d5e56c90134efb7c309f614ec34ad19eb1da56060639febb011bbf0c5a78ddc8856b4859283746368f1d14179594b53072e3acf7c32ddbff020494e439c6f82cfa61b83ed3058cf7a0fe49c14b5fa65bf4950ad0a34a6dbbd84a51b62998ec5b5b43749df2dfeeb8cdcee6b30fb843244a0939787a644bc5cd8c1a64a6922e866985ab449efe035348a730b814497e75e100b7a258f7b4ee61c26d93b759004792ba9316bd2f175c3e5a6b9cb1f74</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="临时感想" scheme="https://flyleeee.github.io/tags/%E4%B8%B4%E6%97%B6%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>两条道路</title>
    <link href="https://flyleeee.github.io/2021/03/16/post-3/"/>
    <id>https://flyleeee.github.io/2021/03/16/post-3/</id>
    <published>2021-03-16T02:09:58.000Z</published>
    <updated>2021-03-25T05:49:42.030Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="别想了，没密码看不了的" data-whm="这是啥意思，没搞懂">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">没密码就别想看力</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="bddf1d98775b04e9e7f57173465e007c02d8ccb2aff4611fd25933a7e039c4c0">c49ff408f5a99a5cb1090d5c2da5a69708d5191d874ce186cee5b8e7eba610810a29181d598a54314fbb3fb831cc7f414950311fcc4cc8e22883a1091e19443bf1694cec034480458d3bb1e412fb271ae16f4a9acc1f38568a388c937f2c64b497830636572d4c626a7338fdb86155374aec2241204e3b044f587d0c2d12be38371394be9015a0f582de2a3d0d2d4b96f2603d53a4c345ee5c513e2893dffa892d177b2b476490be94c7f2a45b07f601a248100be724f5178adbc17acd6c4a5ecf42be4b54782421e3364e053bffd479d4b4e0f29b48d32ae378049927e4c56bd1c7a5488ba7e34ba6f860547cda7f0568035683dcd174f4d8f0da08c9e3aa1ba0a8d555248b1853b2f01b1f8ccf3ab505b2f474489168e28e780f46a8749266a78e54158e42dd6388fc800b17e0a4bc7dea2d2897617e1f8d78b4fbd9b1a840b043ebdc396cb6514939dbc213a504c5ffdd8ca15e11f30dd631e5af784a20ce4bc9aee7cd96d3432808b419f956f6c0002381799897842a354a35fe7a26e801798aec6889c4192ec808e0e59d98a0aa87ebf5b1b25684098939eab6947d12570e56e8f969ed0b4512a1c089797eba0f751470cf736d9813c5b1233b90be4d86589fd19476e61c89ec1cfe4c1a53a9344067a9b39441ece5f22f0d0f9648076c31bdd69b6aad5403678932f6f060e32bdcfa4115ab62c5e1544729721859d6f5d5b96d407756038787824434e367f63ed5beedbd5052e8a91ff5001b335e73c9effb5f5ff5e21a6695a3ad7fe6f01f1df33f372d5b6c995e91573565c1e54bf8bf33612568db2229da413c737429776d408c5c528f9d1dea68c5863f84747c44043203a1c205e10ddccebe53b6ad09bbd31dc591493d4de5937b19791c5793591b11f714952307f3101803f8a3772f1d98d7766a1f902e9ee3b5fdcade73751698fd253280e4c32e4c0d249e8db39a42ecc72f5e473913dee2e66545a60cccfd05c436473fe51ed711a7759c1e50404f3d44b09859e99385665c8e852393c59a740095461544f9acb5c858dbe79f4b9a0d7bb2881922ee6429210632c2e90c3c5fc304790d41447f49303b96d7ba436096fa0c949997d870f2aac952d1515e2c</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="临时感想" scheme="https://flyleeee.github.io/tags/%E4%B8%B4%E6%97%B6%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>我的心曾悲伤七次</title>
    <link href="https://flyleeee.github.io/2021/01/30/times/"/>
    <id>https://flyleeee.github.io/2021/01/30/times/</id>
    <published>2021-01-30T07:37:38.000Z</published>
    <updated>2021-01-30T08:12:02.725Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="《我的心曾悲伤七次》"><a href="#《我的心曾悲伤七次》" class="headerlink" title="《我的心曾悲伤七次》"></a>《我的心曾悲伤七次》</h1><p>卡里·纪伯伦 Kahlil Gibran</p><p>第一次，当它本可进取时，却故作谦卑；</p><p>第二次，当它在瘸者面前跛行；</p><p>第三次，在困难与容易之间，它选择了容易；</p><p>第四次，它犯了错，却借由别人也会犯错来宽慰自己；</p><p>第五次，它因软弱而忍让，却归因于一种坚韧；</p><p>第六次，当它鄙夷一张丑恶的嘴脸时，却不知那正是自己面具中的一副；</p><p>第七次，它侧身于生活的污泥中，虽不甘心，却又畏首畏尾。</p><p>这也写的太好了吧，无论是高中第一次看还是几年后再看都是直戳我的烂处，让人不禁怀疑我这几年究竟是长进了还是倒退了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="书摘" scheme="https://flyleeee.github.io/categories/%E4%B9%A6%E6%91%98/"/>
    
    
    <category term="临时感想" scheme="https://flyleeee.github.io/tags/%E4%B8%B4%E6%97%B6%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>git的那些坑(龟速更新中)</title>
    <link href="https://flyleeee.github.io/2020/12/11/post-2/"/>
    <id>https://flyleeee.github.io/2020/12/11/post-2/</id>
    <published>2020-12-11T12:06:16.000Z</published>
    <updated>2020-12-11T12:16:48.316Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><ol><li>git在推送过程中默认不区分大小写，通过修改/.deploy_git/.git下的config文件中的ignorecase属性即可<code>ignorecase = false</code>。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="教程" scheme="https://flyleeee.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="git" scheme="https://flyleeee.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>如何将现有的github pages绑定自定义域名，备案，实现国内CDN加速（更新中)</title>
    <link href="https://flyleeee.github.io/2020/12/11/post/"/>
    <id>https://flyleeee.github.io/2020/12/11/post/</id>
    <published>2020-12-11T07:53:55.000Z</published>
    <updated>2021-09-19T03:39:01.266Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><blockquote><p>gitee pages服务貌似并不支持自定义域名绑定，根据<a href="https://gitee.com/help/articles/4228">官方说明</a>，该服务现在仅由gitee pages Pro服务支持，而该服务个人用户现已无法购买。<br>主要基于腾讯云</p></blockquote><h1 id="购买自定义域名"><a href="#购买自定义域名" class="headerlink" title="购买自定义域名"></a>购买自定义域名</h1><p>这个的实现方法很多，我是直接在腾讯云旗下的DNSPOD买了个首年一块钱的（真实穷逼）。买完还有工作人员给我打电话问还有什么疑惑啥的，服务有点好，有点受宠若惊，嘿嘿。然后实名认证一下，说是要什么一到两个工作日后台审核才能走完全部流程，实则我搞的时候一个小时左右差不多就完事了，但是DNS服务还要多等几个小时才完全正常运行，至少我搞的时候是这么个情况。</p><h1 id="将自定义域名绑定到github-pages"><a href="#将自定义域名绑定到github-pages" class="headerlink" title="将自定义域名绑定到github pages"></a>将自定义域名绑定到github pages</h1><p>github官方教程：<a href="https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site#further-reading">Managing a custom domain for your GitHub Pages site</a><br>下面是我自己在DNSPOD上的流程：</p><ol><li><del>打开自己的github仓库，打开<code>setting</code>，在<code>github pages</code>那里把<code>Custom domain</code>改成自己的自定义域名，<code>save</code></del><br>试过以后我才发现被划去的步骤对于使用hexo搭建博客的我来说是完全错误的，对于github pages来说，被划去的步骤实际上执行了一个操作，那就是在你的仓库master分支下生成了一个叫CNAME的文件，而这个文件的内容就是你的提交的子域名，但倘若你使用诸如hexo这样的框架去实现推送，它每次都会自动地把CNAME覆盖掉，为了实现在推送以后也不覆盖掉CNAME文件，你必须自己在<code>source</code>文件夹下创一个叫CNAME的文件(大写无后缀)，然后把内容写成你的域名即可(例如我的就是flylee.club)，hexo的原理就是在<code>source</code>文件夹下的非markdown文件都会原模原样地上传到github仓库文件夹下，所以这样就成功了&gt; V &lt;。</li><li>在DNSPOD上把自己在github pages上的域名写到CNAME里去，详见<a href="https://docs.dnspod.cn/dns/5f2d4664e8320f1a740d9cf9/">DNSPOD官方教程</a>。<br><img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/CNAME.png" alt="CNAME" loading="lazy">(这两步先后顺序无所谓)。</li><li>这一步应该不是必须的，<a href="https://cloud.tencent.com/product/ssl?from=newDNSPod">申请SSL证书</a>，这样你的域名就可以通过https安全访问了，浏览器也不会报警什么的，貌似有的域名买下来的时候自带这个？我也不是很清楚，反正我是自己手动申了一个，在选择界面别被默认的4000块吓到了（本人情况QAQ)，选<code>域名免费版(DV)</code>，就可以白嫖到一个SSL证书啦OVO。</li></ol><h1 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h1><p>我备案主要是为了使用国内CDN进行访问加速，不然github的国内裸连有时实在不是很理想。</p><ol><li>我使用的是<a href="https://cloud.tencent.com/product/ba?_ga=1.47523183.916133905.1568449197">腾讯云备案</a>，需要买至少三个月的腾讯云服务器才行，不过可以使用腾讯的学生优惠服务<a href="https://cloud.tencent.com/act/campus?from=11821">云+校园</a>，三个月只需27元，还是很可以的了，然后每个地方审核要求不太一样，按要求提交各种信息过个两三周基本就过了，记得审核的时候把域名的dns解析关了就行。</li><li>完了还要在30天内搞个公安备案，腾讯云那边会有通知和教程，还是得提交一堆信息文件啥的，然后慢慢等审核= =。</li><li>好，甘肃管局3个月也没有任何回复，看了一下说还要联系别的什么什么部门，好干净利落的踢皮球啊！我的热情也耗尽了，加个毛线速，开摆！XD</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="教程" scheme="https://flyleeee.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="建站" scheme="https://flyleeee.github.io/tags/%E5%BB%BA%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>教你如何从零开始搭建一个属于自己的网站(转载)</title>
    <link href="https://flyleeee.github.io/2020/12/10/post-1/"/>
    <id>https://flyleeee.github.io/2020/12/10/post-1/</id>
    <published>2020-12-10T11:15:54.000Z</published>
    <updated>2020-12-11T12:07:24.553Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><blockquote><p>感谢云游君的教程，细致无比，非常适合像我这样的小白，本站也是仰仗于该教程而建立。  </p></blockquote><p><a href="https://www.yunyoujun.cn/share/how-to-build-your-site">教你如何从零开始搭建一个属于自己的网站</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="教程" scheme="https://flyleeee.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="建站" scheme="https://flyleeee.github.io/tags/%E5%BB%BA%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>Jordan Peterson</title>
    <link href="https://flyleeee.github.io/2020/12/10/Peterson/"/>
    <id>https://flyleeee.github.io/2020/12/10/Peterson/</id>
    <published>2020-12-10T01:45:54.000Z</published>
    <updated>2021-01-30T07:49:05.945Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>JP,yyds<br>下仅列出一些我觉得有意思的</p><ul><li><a href="https://www.bilibili.com/video/BV1DE411A7h9">男女性格差异及其本质原因</a></li><li><a href="https://www.bilibili.com/video/BV1cg4y1z72W">希特勒、甘地和乌合之众</a></li><li><a href="https://www.bilibili.com/video/BV1AW411M7vL?t=54">人格与其转变(Personality and Its Transformations)</a></li><li><a href="https://www.bilibili.com/video/BV1vE411C7BN?t=42">人一生中什么最重要？</a></li></ul><blockquote><p>太讲究理智，容易与人产生摩擦；太顺从情感，则会被情绪左右；太坚持己见，终将走入穷途末路，总而言之，这世间并不宜人。<br>                        ————夏目漱石《草枕》</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="普通的博客" scheme="https://flyleeee.github.io/categories/%E6%99%AE%E9%80%9A%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="心理学" scheme="https://flyleeee.github.io/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>海明码</title>
    <link href="https://flyleeee.github.io/2020/12/02/%E6%B5%B7%E6%98%8E%E7%A0%81/"/>
    <id>https://flyleeee.github.io/2020/12/02/%E6%B5%B7%E6%98%8E%E7%A0%81/</id>
    <published>2020-12-02T07:57:48.000Z</published>
    <updated>2020-12-02T09:00:07.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p><a href="https://www.cnblogs.com/scrutable/p/6052127.html">海明码介绍</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="网原" scheme="https://flyleeee.github.io/categories/%E7%BD%91%E5%8E%9F/"/>
    
    
    <category term="学习" scheme="https://flyleeee.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="计科" scheme="https://flyleeee.github.io/tags/%E8%AE%A1%E7%A7%91/"/>
    
    <category term="网原" scheme="https://flyleeee.github.io/tags/%E7%BD%91%E5%8E%9F/"/>
    
    <category term="编码" scheme="https://flyleeee.github.io/tags/%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>我也不知道说什么好了</title>
    <link href="https://flyleeee.github.io/2020/11/23/%E6%88%91%E4%B9%9F%E4%B8%8D%E7%9F%A5%E9%81%93%E8%AF%B4%E4%BB%80%E4%B9%88%E5%A5%BD%E4%BA%86/"/>
    <id>https://flyleeee.github.io/2020/11/23/%E6%88%91%E4%B9%9F%E4%B8%8D%E7%9F%A5%E9%81%93%E8%AF%B4%E4%BB%80%E4%B9%88%E5%A5%BD%E4%BA%86/</id>
    <published>2020-11-23T03:54:06.000Z</published>
    <updated>2020-12-04T02:52:48.131Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="别想了，没密码看不了的" data-whm="这是啥意思，没搞懂">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">没密码就别想看力</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="ccfcde213ca547fe28848c3d7c59ef2b53185dc2320e3a533dcac87adf99949e">c49ff408f5a99a5cb1090d5c2da5a69708d5191d874ce186cee5b8e7eba610810a29181d598a54314fbb3fb831cc7f414950311fcc4cc8e22883a1091e19443bf1694cec034480458d3bb1e412fb271ae16f4a9acc1f38568a388c937f2c64b497830636572d4c626a7338fdb86155374aec2241204e3b044f587d0c2d12be38371394be9015a0f582de2a3d0d2d4b96f2603d53a4c345ee5c513e2893dffa892d177b2b476490be94c7f2a45b07f601a248100be724f5178adbc17acd6c4a5ecf42be4b54782421e3364e053bffd479d4b4e0f29b48d32ae378049927e4c56bd1c7a5488ba7e34ba6f860547cda7f0568035683dcd174f4d8f0da08c9e3aa1ba0a8d555248b1853b2f01b1f8ccf3ab505b2f474489168e28e780f46a8749266a78e54158e42dd6388fc800b17e0a4bc7dea2d2897617e1f8d78b4fbd9b1a840b043ebdc396cb6514939dbc213a504c5ffdd8ca15e11f30dd631e5af784a20ce4bc9aee7cd96d3432808b419f956f6c0dd9ddb7fe00149f921af6480f76174f6cb46662ce3e9af0a65c0fd70b0a516b51974a77a7e3c4a209bbd3da634e4f6f745ac550d6fd28cad399e0554ed3622bf791cbbf30aa32616a0ba752115f0b957b30675b3a759ed81b95abe300eca58644941f90089219be2d1887609f7abadf2820ea0d82958388fa7a7c92def512ddc446c7bee2fa810c88dca4ba2eacc07904f084dde182abbf53f345adbb11d180d8d687bb90bda0510402c7ef0fef5b1c06e9baccd164a1702c629e8b60845604334169ec4fb60edfc51b19339ff5cbf7bdcd201f39822ce9a316a279090fd8dcb77ec75392e85a927247ad614e98d3f9dede02be6317ef6ff752b3bb70e458e85816064b74252344dd110dfa102e9eb33c020e737afc67c3fd47aaaad184028fd695f7813fa6af3cf0b42c2610b6f4282dfd439bb8dde4c0ffbb112fde58b73d35b4e5d0605e94d5bd444e42558e603a568340f1fda6a708f98b023f05f53a2720c717b65a38826e1844b45300c54e66e861c45ca59002bf769243481bfe7bac3c40ee244155f309273f63d44164910563bb820d77e6040465e68bf7b43ba37969ce846fb04108d9875f820a52802d6e451c4547fdfb00c592e790f5620b266695d35dcba3cbd959ba56b04db1ee1d148996bc01b25bebae6de81c153ffa8cede</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">/</summary>
    
    
    
    <category term="普通的博客" scheme="https://flyleeee.github.io/categories/%E6%99%AE%E9%80%9A%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="sth" scheme="https://flyleeee.github.io/tags/sth/"/>
    
  </entry>
  
  <entry>
    <title>大师我悟了</title>
    <link href="https://flyleeee.github.io/2020/11/21/%E5%A4%A7%E5%B8%88%E6%88%91%E6%82%9F%E4%BA%86/"/>
    <id>https://flyleeee.github.io/2020/11/21/%E5%A4%A7%E5%B8%88%E6%88%91%E6%82%9F%E4%BA%86/</id>
    <published>2020-11-21T11:20:17.000Z</published>
    <updated>2020-12-01T11:05:08.811Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="先这么干试试"><a href="#先这么干试试" class="headerlink" title="先这么干试试"></a>先这么干试试</h1><p>卷个锤子，天天想着卷结果卷不动，搞得自己心情差还浪费时间，不如直接开始看闲书瞎搞别的，稍微卷卷就行了，一直嗯卷属实不适合我这种人，如果考试真拉跨了再说，芜湖，浪去了 XD。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="普通的博客" scheme="https://flyleeee.github.io/categories/%E6%99%AE%E9%80%9A%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="临时感想" scheme="https://flyleeee.github.io/tags/%E4%B8%B4%E6%97%B6%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>确实啊确实</title>
    <link href="https://flyleeee.github.io/2020/11/21/note1/"/>
    <id>https://flyleeee.github.io/2020/11/21/note1/</id>
    <published>2020-11-21T00:48:39.000Z</published>
    <updated>2020-12-01T11:05:12.957Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="图书馆随便翻到的"><a href="#图书馆随便翻到的" class="headerlink" title="图书馆随便翻到的"></a>图书馆随便翻到的</h1><p>大概是讲怎么从生理层面提高debug能力，很草但是很对XD</p> <img src="https://cdn.jsdelivr.net/gh/flyleeee/flyleeee.github.io/images/qq_pic_merged_1605919632266.jpg" alt="随便翻到的书" align=center / loading="lazy">]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="普通的博客" scheme="https://flyleeee.github.io/categories/%E6%99%AE%E9%80%9A%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="摘录" scheme="https://flyleeee.github.io/tags/%E6%91%98%E5%BD%95/"/>
    
  </entry>
  
</feed>
